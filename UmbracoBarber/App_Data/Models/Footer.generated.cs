//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1094 with alias "footer"
	/// <summary>Footer</summary>
	public partial interface IFooter : IPublishedContent
	{
		/// <summary>Description</summary>
		IHtmlString Description { get; }

		/// <summary>Input</summary>
		string Input { get; }

		/// <summary>Left Title</summary>
		string LeftTitle { get; }

		/// <summary>Middle Title</summary>
		string MiddleTitle { get; }

		/// <summary>Right Title</summary>
		string RightTitle { get; }
	}

	/// <summary>Footer</summary>
	[PublishedContentModel("footer")]
	public partial class Footer : PublishedContentModel, IFooter
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "footer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Footer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Footer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public IHtmlString Description
		{
			get { return GetDescription(this); }
		}

		/// <summary>Static getter for Description</summary>
		public static IHtmlString GetDescription(IFooter that) { return that.GetPropertyValue<IHtmlString>("description"); }

		///<summary>
		/// Input
		///</summary>
		[ImplementPropertyType("input")]
		public string Input
		{
			get { return GetInput(this); }
		}

		/// <summary>Static getter for Input</summary>
		public static string GetInput(IFooter that) { return that.GetPropertyValue<string>("input"); }

		///<summary>
		/// Left Title
		///</summary>
		[ImplementPropertyType("leftTitle")]
		public string LeftTitle
		{
			get { return GetLeftTitle(this); }
		}

		/// <summary>Static getter for Left Title</summary>
		public static string GetLeftTitle(IFooter that) { return that.GetPropertyValue<string>("leftTitle"); }

		///<summary>
		/// Middle Title
		///</summary>
		[ImplementPropertyType("middleTitle")]
		public string MiddleTitle
		{
			get { return GetMiddleTitle(this); }
		}

		/// <summary>Static getter for Middle Title</summary>
		public static string GetMiddleTitle(IFooter that) { return that.GetPropertyValue<string>("middleTitle"); }

		///<summary>
		/// Right Title
		///</summary>
		[ImplementPropertyType("rightTitle")]
		public string RightTitle
		{
			get { return GetRightTitle(this); }
		}

		/// <summary>Static getter for Right Title</summary>
		public static string GetRightTitle(IFooter that) { return that.GetPropertyValue<string>("rightTitle"); }
	}
}
